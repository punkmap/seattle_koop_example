{"version":3,"sources":["assets/PushPin.png","config.js","components/molecules/MapSearch/MapSearch.js","components/organisms/SidePanel/SidePanel.js","components/molecules/InfoPanel/InfoPanel.js","components/molecules/UserButton/UserButton.js","components/molecules/MapOverlayPanel/MapOverlayPanel.js","components/organisms/ReactMap/ReactMap.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","config","salesforce","client_id","client_secret","sandboxRoot","callbackRoot","MapSearch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchWidget","self","loadModules","then","_ref","_ref2","slicedToArray","Search","GraphicsLayer","Graphic","PictureMarkerSymbol","webMercatorUtils","Locator","view","map","container","locationEnabled","resultGraphicEnabled","sources","get","push","featureLayer","url","searchFields","displayField","exactMatch","outFields","name","placeholder","locator","singleLineFieldName","autoNavigate","maxSuggestions","set","activeSourceIndex","setState","searchResultGL","add","draggingGraphic","tempGraphic","resultIcn","pinImg","height","width","on","event","mapPoint","webMercatorToGeographic","results","feature","geometry","resultG","symbol","console","log","graphics","resultPinDragable","evt","action","hitTest","resp","graphic","type","stopPropagation","remove","clone","toMap","newGraphic","react_default","a","createElement","className","Grid_default","spacing","alignItems","direction","justify","id","Component","SidePanel","update","e","onUpdate","target","value","fieldVal","handleChange","projectCallback","phaseCallback","defineProperty","project_delete","phase_delete","project","phase","disableAddButton","disableDeleteButton","menuClick","anchorEl","currentTarget","handleClose","key","titleBarTitle","editAction","getPointerEvents","componentDidMount","sideNav","React","createRef","addProject","addSelectedProperties","removeProject","deleteSelectedProperties","classes","showDeleteButton","pointerEvents","bind","assertThisInitialized","MuiThemeProvider_default","muiTheme","getMuiTheme","darkBaseTheme","Fade_default","in","hideSidePanel","timeout","Paper_default","classNames","pointerEventsAuto","AppBar_default","appBar","title","iconElementLeft","IconButton_default","color","aria-label","aria-owns","undefined","aria-haspopup","onClick","icons_Menu_default","Menu_default","open","Boolean","onChange","MenuItem_default","FormControl_default","margin","TextField_default","label","TextField","variant","Fab_default","disabled","addButton","DoneAll_default","extendedIcon","textField","deleteButton","DeleteForever_default","withStyles","theme","position","marginLeft","unit","marginRight","paper","paddingTop","paddingBottom","maxWidth","paddingLeft","typeTitle","palette","getContrastText","green","backgroundColor","&:hover","red","InfoPanel","toggleAdopt","assetKeyInfo","getAdoptStatusByIndex","pageIndex","info","sfid","Adopted","axios","method","nodeAppRoot","data","response","JSON","parse","stringify","adoptData","adoptCallback","catch","error","getChatterFeed","salesforceId","sfId","chatterInfo","panelUseChangeCallback","constructChatterDiv","segments","forEach","seg","hasOwnProperty","htmlTag","text","addPost","subjectId","msgBody","body","messageSegments","postText","feedElementType","unshift","postOnChange","addComment","messageId","comment","commentValues","i","length","message","comments","page","items","objectSpread","nextRecord","lastRecord","idx","keys","isSalesforceLink","item","pageCount","popupData","hasError","adopted","panelUse","chatterFeedInterval","infoData","setInterval","clearInterval","_this2","xs","core_IconButton_default","button","KeyboardArrowLeft_default","KeyboardArrowRight_default","List_default","list","subheader","concat","listSection","ul","ListItem_default","Link_default","href","ListItemText_default","primary","orphanedButton","adoptedButton","chatterButton","chatterHeader","chatterPostGrid","parentId","AddComment_default","multiline","rowsMax","chatterList","index","elevation","Avatar_default","src","actor","photo","avatar","displayName","commentGrid","commentOnChange","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","heading","ExpansionPanelDetails_default","commentList","user","smallPhotoUrl","listStyleType","link","padding","subHeader","fontSize","blue","purple","paddingRight","marginTop","marginBottom","card","minWidth","pos","typography","pxToRem","fontWeight","fontWeightRegular","UserButton","logUserOut","parentDiv","fab","Add_default","MapOverlayPanel","setProjectCallback","setPhaseCallback","componentDidUpdate","molecules_MapSearch_MapSearch","molecules_InfoPanel_InfoPanel","layers","serviceIndex","fields","alias","fieldAliases","popupTemplate","definitionExpression","minScale","renderer","size","outline","classrenderer","field","uniqueValueInfos","ReactMap","loadMap","_ref$loadedModules","loadedModules","Map","MapView","watchUtils","containerNode","selectedParcelGL","visible","center","zoom","basemap","when","mapView","mapClick","popup","highlightEnabled","actions","addFeatureLayers","loadFeaturesByExtent","sessionParameters","handleSessionParameters","watch","debounce","func","wait","immediate","context","args","arguments","callNow","clearTimeout","setTimeout","apply","callback","FeatureLayer","layer","fl","objectIdField","geometryType","source","popupEnabled","layersConcat","featureLayerId","identifyable","valueExpression","valueExpressionTitle","createMarkerSymbol","whenLayerView","layerView","layerViews","angle","xoffset","yoffset","style","findLayerById","mapExtent","extent","facIds","features","attributes","FACILITYID","addFacIds","slice","deleteFacIds","qObject","where","join","returnGeometry","queryFeatureLayer","existingFacIds","exFacId","indexOf","splice","assetids","sfRecords","combinedDataset","ADOPTED","sfri","record","SerialNumber","Adopted__c","Id","SFID","applyEdits","addFeatures","queryFeatures","removeFacIds","deleteFeatures","queryFeatureCount","numFeatures","seschParams","params","layerId","fSetFeature","OBJECTID","getLayerConfig","goTo","animate","duration","updateFeatureSelectionGraphic","queryObject","_ref4","query","Query","err","panelUseChange","spatiallyQueryLayers","_ref6","_ref7","createQuery","distance","spatialRelationship","markerSymbol","getLayerViewByLayerId","featureSet","removeAll","layerConfig","getFacilityIds","ids","result","deleteObjectKeys","object","_ref8","_ref9","split","facilityId","updateFeatures","editResult","useState","ctrlKey","parametersLoaded","es","options","modulesToLoad","onReady","molecules_MapOverlayPanel_MapOverlayPanel","PureComponent","App","sessionTokenObj","urlParams","URLSearchParams","window","location","search","code","organisms_ReactMap_ReactMap","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9c920fcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PushPin.d22b5a3d.png\";","let config = {}\r\n\r\nconfig.salesforce = {}\r\nconfig.salesforce.client_id = \"3MVG9PbQtiUzNgN6qyCRXekPUMS7LDgAd4wRM2RGE.7F8tce_sPY5k8cAnOsw0xOmk4NIIO4RhxVYbs.yeW5G\"\r\nconfig.salesforce.client_secret = \"E954C9C5E1949CF61A3254EBB4E1C3474CC972D52CF25B39EE209E3003788CC5\"\r\nconfig.salesforce.sandboxRoot = 'https://carync--zeus.cs51.my.salesforce.com/'\r\n//config.salesforce.callbackRoot = 'http://localhost:8080'\r\nconfig.salesforce.callbackRoot = 'http://woesoflightning.com'\r\nmodule.exports = config","import React, { Component, Fragment } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\nimport './MapSearch.css'\r\n\r\nimport pinImg from '../../../assets/PushPin.png'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nclass MapSearch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        searchWidget: null\r\n    }\r\n  }\r\n componentDidUpdate() {\r\n    const self = this\r\n    loadModules(['esri/widgets/Search', 'esri/layers/GraphicsLayer', 'esri/Graphic', 'esri/symbols/PictureMarkerSymbol', 'esri/geometry/support/webMercatorUtils', 'esri/tasks/Locator']).then(([Search, GraphicsLayer, Graphic, PictureMarkerSymbol, webMercatorUtils, Locator]) => {\r\n      \r\n        if (self.state.searchWidget==null&&self.props.view!=null&&self.props.view.map!=null){\r\n        const view = self.props.view;\r\n        let searchWidget = new Search({\r\n          view: view\r\n          , container: 'searchWidget'\r\n          , locationEnabled: false\r\n          , resultGraphicEnabled: false\r\n          //, popupEnabled: false\r\n        })\r\n        let sources = searchWidget.get('sources');\r\n        let propertySource = {\r\n          featureLayer: {\r\n            url: \"https://maps.townofcary.org/arcgis1/rest/services/Property/Property/MapServer/0\",\r\n          },\r\n          searchFields: [\"PIN10\"],\r\n          displayField: \"PIN10\",\r\n          exactMatch: false,\r\n          outFields: [\"PIN10\"],\r\n          name: \"Property PIN10\",\r\n          placeholder: \"PIN10: 0764523393\",\r\n    }\r\n        sources.push(propertySource,\r\n        {\r\n            //Pass in the custom locator to the sources\r\n            locator: new Locator(\"https://maps.townofcary.org/arcgis1/rest/services/Locators/Cary_Com_Locator/GeocodeServer\"),\r\n            singleLineFieldName: \"SingleLine\",\r\n            outFields: [\"*\"],\r\n            name: \"ToC Locator\",\r\n            autoNavigate: true,\r\n            maxSuggestions: 3,\r\n            placeholder: \"Address: 120 Wilkinson Ave\"\r\n        })\r\n        searchWidget.set('sources', sources)\r\n        searchWidget.activeSourceIndex = 1;\r\n        self.setState({searchWidget:searchWidget})  \r\n        let searchResultGL = new GraphicsLayer()\r\n        self.props.view.map.add(searchResultGL, 5)\r\n        let resultIcn = new PictureMarkerSymbol({url:pinImg, height: '48px', width: '48px'})\r\n        \r\n        searchWidget.on('search-complete', function(event) {\r\n          let mapPoint = webMercatorUtils.webMercatorToGeographic(event.results[0].results[0].feature.geometry)\r\n          let resultG = new Graphic({\r\n              geometry: mapPoint, \r\n              symbol: resultIcn\r\n            });\r\n            console.log('event.activeSourceIndex: ' + event.activeSourceIndex)\r\n            // if(event.activeSourceIndex === 1||event.activeSourceIndex === 2){\r\n            //   self.props.selectParcelCallback(mapPoint.centroid)\r\n            // }\r\n          searchResultGL.graphics.add(resultG)\r\n        })\r\n\r\n        if(self.props.resultPinDragable == true){\r\n            let draggingGraphic;\r\n            let tempGraphic;\r\n            view.on(\"drag\", function(evt) {       \r\n              // if this is the starting of the drag, do a hitTest\r\n              if (evt.action === 'start'){\r\n                view.hitTest(evt).then(resp => {\r\n                  if (resp.results[0].graphic && resp.results[0].graphic.geometry.type === 'point'){\r\n                    evt.stopPropagation();\r\n                    // if the hitTest returns a point graphic, set dragginGraphic\r\n                    draggingGraphic = resp.results[0].graphic;\r\n                  }\r\n                });\r\n              } else if (evt.action === 'update'){\r\n                // on drag update events, only continue if a draggingGraphic is set\r\n                if (draggingGraphic){\r\n                  evt.stopPropagation();\r\n                  // if there is a tempGraphic, remove it\r\n                  if (tempGraphic) {\r\n                    searchResultGL.remove(tempGraphic);\r\n                  } else {\r\n                    // if there is no tempGraphic, this is the first update event, so remove original graphic\r\n                    searchResultGL.remove(draggingGraphic);\r\n                  }\r\n                  // create new temp graphic and add it\r\n                  tempGraphic = draggingGraphic.clone();\r\n                  tempGraphic.geometry = view.toMap(evt);\r\n                  searchResultGL.add(tempGraphic);\r\n                }\r\n              } else if (evt.action === 'end'){\r\n                // on drag end, continue only if there is a draggingGraphic\r\n                if (draggingGraphic){\r\n                  evt.stopPropagation();\r\n                  // rm temp\r\n                  if (tempGraphic) searchResultGL.remove(tempGraphic);\r\n                  // create new graphic based on original dragging graphic\r\n                  let newGraphic = draggingGraphic.clone();\r\n                  newGraphic.geometry = tempGraphic.geometry.clone();\r\n                  \r\n                  // add replacement graphic\r\n                  searchResultGL.add(newGraphic);\r\n                  \r\n                  // reset vars\r\n                  draggingGraphic = null;\r\n                  tempGraphic = null; \r\n                }\r\n              }    \r\n            });\r\n          }\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mapSearch\">\r\n        <Grid\r\n          container\r\n          spacing={16}\r\n          alignItems=\"center\"\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n        >\r\n          <div id=\"searchWidget\" />\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapSearch","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport IconButton from 'material-ui/IconButton';\r\n// import FloatingActionButton from 'material-ui/FloatingActionButton';\r\n// import NavigationClose from 'material-ui/svg-icons/navigation/close';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport NavigationIcon from '@material-ui/icons/DoneAll';\r\nimport green from '@material-ui/core/colors/green';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport './SidePanel.css';\r\n\r\n\r\nfunction getPointerEvents(){\r\n    return true\r\n}\r\nconst styles = theme => ({\r\n    appBar: {\r\n      position: 'relative',\r\n    }\r\n    , textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    }\r\n    , pointerEventsAuto: {\r\n        pointerEvents: 'auto'\r\n    }\r\n    , paper: {\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    }\r\n    , type: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        paddingLeft: 15\r\n    }\r\n    , typeTitle: {\r\n        paddingTop: 5\r\n    }\r\n    , addButton: {\r\n        color: theme.palette.getContrastText(green[500]),\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    }\r\n    , deleteButton: {\r\n        color: theme.palette.getContrastText(red[500]),\r\n        backgroundColor: red[500],\r\n        '&:hover': {\r\n            backgroundColor: red[700],\r\n        },\r\n    }\r\n    , extendedIcon: {\r\n        marginRight: theme.spacing.unit*2,\r\n    }\r\n\r\n  });\r\n\r\nclass SidePanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        const { classes } = this.props;\r\n        this.state = {\r\n            project: ''\r\n            , phase: ''\r\n            , project_delete: ''\r\n            , phase_delete: ''\r\n            , disableAddButton: true\r\n            , showDeleteButton: true\r\n            , anchorEl: null\r\n            , editAction: 'add'\r\n            , titleBarTitle: 'Add Project'\r\n            , pointerEvents: 'auto'\r\n            // , sidePanelClasses: ['sidePanel', 'pointerEventsInactive']\r\n            // , textFieldClasses: [classes.textField, classes.pointerEventsInactive]\r\n            //, editAction: 'delete'\r\n        };\r\n        this.menuClick = this.menuClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.sideNav = React.createRef();\r\n    }\r\n    update = (e) => {\r\n        this.props.onUpdate(e.target.value);\r\n        this.setState({fieldVal: e.target.value});\r\n    };\r\n    handleChange = name => event => {\r\n        name === 'project' || name==='project_delete' ? this.props.projectCallback(event.target.value) : this.props.phaseCallback(event.target.value)\r\n        \r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            console.log('this.state.project_delete: ' + this.state.project_delete);\r\n            console.log('this.state.phase_delete: ' + this.state.phase_delete);\r\n            if(this.state.project && this.state.phase){\r\n                this.setState({disableAddButton: false})\r\n            }\r\n            else{\r\n                this.setState({disableAddButton: true})\r\n            }\r\n            if(this.state.project_delete && this.state.phase_delete){\r\n                this.setState({disableDeleteButton: false})\r\n            }\r\n            else{\r\n                this.setState({disableDeleteButton: true})\r\n            }\r\n        });\r\n    };\r\n    menuClick = (e) =>{\r\n        this.setState({anchorEl : e.currentTarget})\r\n    }\r\n    \r\n    handleClose = key => e => {\r\n        key === 'add'? this.setState({titleBarTitle: 'Add Project'}) : this.setState({titleBarTitle: 'Remove Project'})\r\n        this.setState({editAction:key})\r\n        this.setState({anchorEl : null})\r\n    }\r\n    getPointerEvents = () => {\r\n        return true\r\n    }\r\n    componentDidMount = () => {\r\n        this.sideNav = React.createRef();\r\n    }\r\n    componentDidUpdate() {\r\n        // const { classes } = this.props;\r\n        // if(!this.props.hideSidePanel && this.state.sidePanelClasses !== ['sidePanel', 'pointerEventsActive']){\r\n        //     this.state.sidePanelClasses.splice(-1, 1)\r\n        //     this.state.sidePanelClasses.push('pointerEventsActive')\r\n        // } \r\n        // else if (this.props.hideSidePanel && this.state.sidePanelClasses !== ['sidePanel', 'pointerEventsInactive']) {\r\n        //     //this.setState({sidePanelClasses : ['sidePanel', 'sidePanelActive']})\r\n        //     this.state.sidePanelClasses.splice(-1, 1)\r\n        //     this.state.sidePanelClasses.push('pointerEventsInactive')\r\n        // }\r\n    }\r\n    addProject = () =>{\r\n        this.setState({project:''})\r\n        this.setState({phase:''})\r\n        this.setState({disableAddButton: true})\r\n        this.props.addSelectedProperties()\r\n    }\r\n    removeProject = () =>{\r\n        this.setState({project_delete:''})\r\n        this.setState({phase_delete:''})\r\n        this.setState({disableDeleteButton: true})\r\n        this.props.deleteSelectedProperties()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n        <MuiThemeProvider muiTheme={getMuiTheme(darkBaseTheme)}>\r\n            <div >\r\n                <Fade in={!this.props.hideSidePanel} timeout={1000}>\r\n                    <Paper \r\n                        className={classNames('sidePanel', {[classes.pointerEventsAuto]:this.props.hideSidePanel===false})}\r\n                        //className={this.state.sidePanelClasses.join(' ')}\r\n                    >   \r\n                        <AppBar className={classes.appBar} title={this.state.titleBarTitle} iconElementLeft={(\r\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" \r\n                                aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\r\n                                aria-haspopup=\"true\" \r\n                                onClick={this.menuClick}>\r\n                                <MenuIcon />\r\n                            </IconButton>)} \r\n                        >\r\n                        <Menu id=\"simple-menu\" anchorEl={this.state.anchorEl} open={Boolean(this.state.anchorEl)} onChange={this.handleClose}>\r\n                            <MenuItem onClick={this.handleClose('add')}>Add</MenuItem>\r\n                            <MenuItem onClick={this.handleClose('remove')}>Remove</MenuItem>\r\n                        </Menu>\r\n                        </AppBar>\r\n                        {this.state.editAction==='add' ? (\r\n                            <FormControl margin='normal'>\r\n                                <TextField\r\n                                    id=\"tf_project\"\r\n                                    label=\"Project Number\"\r\n                                    className={classes.TextField}\r\n                                    value={this.state.project}\r\n                                    onChange={this.handleChange('project')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"tf_phase\"\r\n                                    label=\"Phase\"\r\n                                    className={classes.TextField}\r\n                                    value={this.state.phase}\r\n                                    onChange={this.handleChange('phase')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                    <Fab variant=\"extended\" \r\n                                        disabled={this.state.disableAddButton}\r\n                                        color=\"primary\" \r\n                                        aria-label=\"Add\" \r\n                                        className={classes.addButton}\r\n                                        onClick={this.addProject}>\r\n                                    \r\n                                        <NavigationIcon className={classes.extendedIcon} />\r\n                                        <b>Add Selection</b>\r\n                                    </Fab>\r\n                            </FormControl>\r\n                        ) : (\r\n                            <FormControl margin='normal'>\r\n                                <TextField\r\n                                    id=\"tf_project_delete\"\r\n                                    label=\"Project Number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.project_delete}\r\n                                    onChange={this.handleChange('project_delete')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"tf_phase_delete\"\r\n                                    label=\"Phase\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.phase_delete}\r\n                                    onChange={this.handleChange('phase_delete')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Fab variant=\"extended\" \r\n                                    disabled={this.state.disableDeleteButton}\r\n                                    color=\"primary\" \r\n                                    aria-label=\"Delete\" \r\n                                    className={classes.deleteButton}\r\n                                    onClick={this.removeProject}\r\n                                >\r\n                                    <DeleteIcon className={classes.extendedIcon} />\r\n                                    <b>Delete Project</b>\r\n                                </Fab>\r\n                            </FormControl>\r\n                        )}                \r\n                    </Paper>\r\n                </Fade>\r\n            </div>\r\n        </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\nSidePanel.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(SidePanel);","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport BackIcon from '@material-ui/icons/KeyboardArrowLeft'\r\nimport ForwardIcon from '@material-ui/icons/KeyboardArrowRight'\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Link from '@material-ui/core/Link'\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddComment from '@material-ui/icons/AddComment'\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport './InfoPanel.css'\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    pointerEvents: 'auto',\r\n  },\r\n  list: {\r\n      width: '100%',\r\n      height : '100%',\r\n      position: 'relative',\r\n      margin: 0,\r\n      paddingTop:theme.spacing.unit*5,\r\n  },\r\n  listSection: {\r\n      height : '100%',\r\n      backgroundColor: 'inherit',\r\n      listStyleType: 'none',\r\n      width: '100%',\r\n  },\r\n  link: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  ul: {\r\n      backgroundColor: 'inherit',\r\n      padding: 0,\r\n      margin:0,\r\n  },\r\n  subHeader: {\r\n      fontSize:'2rem',\r\n      backgroundColor:'#E8E8E8'\r\n  },\r\n  pointerEventsAuto: {\r\n      pointerEvents: 'auto'\r\n  },\r\n  orphanedButton: {\r\n    color: theme.palette.getContrastText(green[500]),\r\n    backgroundColor: green[500],\r\n    maxWidth: theme.spacing.unit * 25,\r\n    margin:theme.spacing.unit*0.5,\r\n    '&:hover': {\r\n        backgroundColor: green[700],\r\n    },\r\n  },\r\n  adoptedButton: {\r\n    color: theme.palette.getContrastText(blue[500]),\r\n    backgroundColor: blue[500],\r\n    maxWidth: theme.spacing.unit * 25,\r\n    margin:theme.spacing.unit*0.5,\r\n    '&:hover': {\r\n        backgroundColor: blue[700],\r\n    },\r\n  },\r\n  chatterButton: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    maxWidth: theme.spacing.unit * 25,\r\n    margin:theme.spacing.unit*0.5,\r\n    '&:hover': {\r\n        backgroundColor: purple[700],\r\n    },\r\n  },\r\n  \r\n  chatterHeader: {\r\n    height: theme.spacing.unit*15,\r\n  },\r\n  chatterList: {\r\n    width: '100%',\r\n    height : '100%',\r\n    position: 'relative',\r\n    margin: 0,\r\n      paddingTop:theme.spacing.unit,\r\n  },\r\n  // noPaddingGrid: {\r\n  //   padding: 0,\r\n  //   margin: 0,\r\n  //   maxHeight: theme.spacing.unit*4,\r\n  // },\r\n  chatterPostGrid: {\r\n    paddingTop:  theme.spacing.unit,\r\n    paddingBottom: 0,\r\n    paddingRight:  theme.spacing.unit*3,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    marginRight:  theme.spacing.unit*3,\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    width:'100%',\r\n    padding:theme.spacing.unit,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  commentList: {\r\n    width: '100%',\r\n    height : '100%',\r\n    position: 'relative',\r\n    margin: 0,\r\n    paddingTop:0,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: '100%',\r\n  },\r\n  commentGrid:{\r\n    paddingRight: theme.spacing.unit*3,\r\n    \r\n  }\r\n});\r\n\r\nclass InfoPanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        pageIndex: 0\r\n        , pageCount:null\r\n        , popupData:null\r\n        , hasError: false\r\n        , adoptData: {value:{adopted:null, label:null}}\r\n        , chatterInfo:null\r\n        , postText:\"\"\r\n        , commentValues:[]\r\n        , panelUse: null\r\n        , chatterFeedInterval: null\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    const self = this\r\n    if(self.props.infoData){\r\n      if(this.state.adoptData !== this.props.infoData){self.setState({adoptData:self.props.infoData})}\r\n    }\r\n    if(this.props.panelUse !== this.state.panelUse){\r\n      this.setState({panelUse:this.props.panelUse})\r\n      if (this.props.panelUse===\"chatter\"){\r\n        this.setState({chatterFeedInterval: setInterval(function(){\r\n          self.getChatterFeed();\r\n        },30000)})\r\n      }\r\n      else{\r\n        clearInterval(this.state.chatterFeedInterval)\r\n      }\r\n    }\r\n  }\r\n  \r\n  toggleAdopt = () => {\r\n    const self = this\r\n    const assetKeyInfo = self.getAdoptStatusByIndex(self.state.pageIndex) \r\n    const info = {'sfid':assetKeyInfo.value[\"Salesforce Id\"], 'Adopted':!assetKeyInfo.value.Adopted}\r\n    \r\n    axios({\r\n      method: 'post'\r\n      , url: this.props.nodeAppRoot+\"toggleadopt/\"\r\n      , data: {\r\n        info:info\r\n      }\r\n    })\r\n    .then(function(response){\r\n      let data = JSON.parse(JSON.stringify(self.state.adoptData))\r\n      self.getAdoptStatusByIndex(self.state.pageIndex).value.Adopted = !self.getAdoptStatusByIndex(self.state.pageIndex).value.Adopted\r\n      self.setState({adoptData:data})\r\n      \r\n      self.props.adoptCallback(self.getAdoptStatusByIndex(self.state.pageIndex))\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"login ELSE error: \" + error);\r\n    });\r\n  }\r\n  getChatterFeed = () => {\r\n    const self = this\r\n    const salesforceId = self.getAdoptStatusByIndex(self.state.pageIndex).value[\"Salesforce Id\"]\r\n    \r\n    axios({\r\n      method: 'post'\r\n      , url: this.props.nodeAppRoot+\"getchatterfeed/\"\r\n      , data: {\r\n        sfId:salesforceId\r\n      }\r\n    })\r\n    .then(function(response){\r\n      if(self.state.chatterInfo!==response.data){\r\n        self.setState({chatterInfo:response.data})\r\n        self.props.panelUseChangeCallback('chatter')\r\n      }\r\n      \r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"login ELSE error: \" + error);\r\n    });  \r\n  }\r\n  constructChatterDiv = (segments) => {\r\n    let tag\r\n    segments.forEach(function(seg){\r\n      if(seg.hasOwnProperty(\"htmlTag\")){\r\n        if(seg.type===\"MarkupBegin\"){\r\n            tag += '<'+seg.htmlTag+'>'\r\n        }\r\n        else{\r\n            tag += '</'+seg.htmlTag+'>'\r\n        }\r\n      }\r\n      else if(seg.hasOwnProperty(\"text\")){\r\n          tag += seg.text\r\n      }\r\n    })\r\n  }\r\n  addPost = (subjectId) => {\r\n    const self = this;\r\n    const msgBody = { \r\n      \"body\" : {\r\n          \"messageSegments\" : [\r\n            {\r\n                \"type\" : \"Text\",\r\n                \"text\" : this.state.postText\r\n            }]\r\n          },\r\n      \"feedElementType\" : \"FeedItem\",\r\n      \"subjectId\" : subjectId\r\n    } \r\n    axios({\r\n      method: 'post'\r\n      , url: this.props.nodeAppRoot+\"addchatterpost/\"\r\n      , data: {\r\n        msgBody:msgBody\r\n      }\r\n    })\r\n    .then(function(response){\r\n      let chatterInfo = self.state.chatterInfo\r\n      chatterInfo.unshift(response.data)\r\n      self.setState({chatterInfo:chatterInfo})\r\n      self.setState({postText: \"\"})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"login ELSE error: \" + error);\r\n    });\r\n    \r\n  }\r\n  postOnChange = event => {\r\n    this.setState({postText: event.target.value})\r\n  }\r\n  addComment =(messageId) => {\r\n    const self = this\r\n    let msgBody = {\"messageId\":messageId, \"comment\" : this.state.commentValues[messageId]}\r\n    axios({\r\n      method: 'post'\r\n      , url: this.props.nodeAppRoot+\"addchattercomment/\"\r\n      , data: {\r\n        msgBody:msgBody\r\n      }\r\n    })\r\n    .then(function(response){\r\n      let chatterInfo = self.state.chatterInfo\r\n      for(let i=0; i<chatterInfo.length; i++){\r\n        let chat = chatterInfo[i]\r\n        if (chat.message.id === messageId){\r\n          chatterInfo[i].message.comments.page.items.push(response.data)\r\n          self.setState({chatterInfo:chatterInfo})\r\n          self.setState({commentValues:{...self.state.commentValues, [messageId]: \"\"}})\r\n          break\r\n        }\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"login ELSE error: \" + error);\r\n    });\r\n    \r\n  }\r\n  commentOnChange(i, e) {\r\n    this.setState({\r\n      commentValues: { ...this.state.commentValues, [i]: e.target.value }\r\n    });\r\n  }\r\n  nextRecord = () => {\r\n    this.setState({pageIndex: this.state.pageIndex+1}) \r\n  }\r\n  lastRecord = () => {\r\n    this.setState({pageIndex: this.state.pageIndex-1}) \r\n  }\r\n  getAdoptStatusByIndex = (idx) => {\r\n    var key = Object.keys(this.state.adoptData)[idx];\r\n    //console.log(\"{ key: key, value: this.state.adoptData[key] }: \" + JSON.stringify({ key: key, value: this.state.adoptData[key] }))\r\n    return { key: key, value: this.state.adoptData[key] };\r\n  }\r\n  isSalesforceLink=(item)=>{\r\n    console.log(item)\r\n    let returnBool\r\n    item===\"Salesforce Id\"?returnBool = true:returnBool = false\r\n    return returnBool\r\n  }\r\n  render() {\r\n    const { classes } = this.props\r\n    const self = this\r\n    return (\r\n      <Fade in={this.props.infoData!=null} timeout={1}>\r\n        <div className={classNames('infoPanel', {[classes.pointerEventsAuto]:this.props.infoData!=null})}>\r\n          { this.props.panelUse==='info' &&\r\n          <Fade in={this.props.panelUse==='info'} timeout={1}>\r\n            <div>\r\n                <div className='header'>\r\n                  <Grid\r\n                    container\r\n                    spacing={16}\r\n                    alignItems=\"center\"\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                  >\r\n                    <Grid item xs>\r\n                      <IconButton \r\n                        //disabled={this.state.pageIndex === 0}\r\n                        disabled = {true}\r\n                        className={classes.button} \r\n                        onClick={this.lastRecord}\r\n                      >  \r\n                        <BackIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    { self.props.infoData\r\n                      ? <h4>Facility Id: {JSON.stringify(self.getAdoptStatusByIndex(self.state.pageIndex).value[\"Facility ID\"])}</h4>\r\n                      : null\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <IconButton \r\n                        // disabled = {this.state.pageIndex===this.props.realEstateDataLength}\r\n                        disabled = {true}\r\n                        className={classes.button} \r\n                        onClick={this.nextRecord}\r\n                      >\r\n                        <ForwardIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n                <div className='body'>\r\n                \r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  { self.props.infoData\r\n                      ? <div>\r\n                          <List className={classes.list} subheader={<li />}>\r\n                            <li key={`section-${self.props.infoData[\"Facility ID\"]}`} className={classes.listSection}>\r\n                                {JSON.stringify(self.props.infoData) != '{}' &&\r\n                                    <ul className={classes.ul}>\r\n                                        {Object.keys(self.getAdoptStatusByIndex(self.state.pageIndex).value).map(item => {\r\n                                        if(item===\"Salesforce Id\"){\r\n                                          return(<ListItem key={`item-${self.getAdoptStatusByIndex(self.state.pageIndex)}-${item}`}>\r\n                                              <Link href={self.props.sandboxRoot+`${self.getAdoptStatusByIndex(self.state.pageIndex).value[item]}`} target=\"_blank\">\r\n                                                Asset Link\r\n                                              </Link>\r\n                                          </ListItem>)\r\n                                        } \r\n                                        else{\r\n                                          return(<ListItem key={`item-${self.getAdoptStatusByIndex(self.state.pageIndex)}-${item}`}>\r\n                                              <ListItemText primary={`${item} : ${self.getAdoptStatusByIndex(self.state.pageIndex).value[item]}`} />\r\n                                          </ListItem>)\r\n                                        } \r\n                                      })}\r\n                                    </ul>\r\n                                }\r\n                            </li>\r\n                          </List>\r\n                          <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                          >\r\n                            <Fab variant=\"extended\" \r\n                              //disabled={this.state.disableDeleteButton}\r\n                              //color=\"primary\" \r\n                              aria-label=\"Delete\" \r\n                              className={self.getAdoptStatusByIndex(self.state.pageIndex).value[\"Adopted\"]===false?classes.orphanedButton:classes.adoptedButton}\r\n                              onClick={this.toggleAdopt.bind(this)}\r\n                            >\r\n                                <b>{self.getAdoptStatusByIndex(self.state.pageIndex).value[\"Adopted\"]===false?\"Adopt\":\"Orphan\"}</b>\r\n                            </Fab>      \r\n                            <Fab variant=\"extended\" \r\n                              //disabled={this.state.disableDeleteButton}\r\n                              //color=\"primary\" \r\n                              className={classes.chatterButton}\r\n                              onClick={this.getChatterFeed.bind(this)}\r\n                            >\r\n                                <b>Chatter</b>\r\n                            </Fab>\r\n                          </Grid> \r\n                        </div>\r\n                      : null\r\n                  }\r\n                  \r\n                </Grid>\r\n              </div>\r\n            </div>     \r\n          </Fade>\r\n          }\r\n          { this.props.panelUse==='chatter' &&\r\n          \r\n          <Fade in={this.props.panelUse==='chatter'} timeout={1}>\r\n            <div>\r\n              <div className={classes.chatterHeader}>\r\n              <Grid item xs\r\n                  className={classes.chatterPostGrid}>\r\n                    {/* <IconButton \r\n                      // disabled = {this.state.pageIndex===this.props.realEstateDataLength}\r\n                      className={classes.button} \r\n                      onClick={this.nextRecord}\r\n                    >\r\n                      <ForwardIcon />\r\n                    </IconButton> */}\r\n                  <Grid\r\n                    container\r\n                    spacing={16}\r\n                    alignItems=\"center\"\r\n                    direction=\"row\"\r\n                  >\r\n                    {/* <Grid item xs={2}>\r\n                      <Fab size=\"small\" color=\"primary\">\r\n                        <ArrowLeft \r\n                          className={classes.button} \r\n                          onClick={() => self.props.panelUseChangeCallback(\"info\")}\r\n                        >  \r\n                          \r\n                        </ArrowLeft>\r\n                      </Fab>\r\n                    </Grid>  */}\r\n                    <Grid item xs={2}\r\n                    >\r\n                      <IconButton \r\n                        className={classes.button} \r\n                        onClick={() => self.addPost(self.state.chatterInfo[0].message.parentId)}\r\n                        //disabled = {self.state.postText.length!=0}\r\n                      >  \r\n                        <AddComment color=\"primary\" />\r\n                      </IconButton>\r\n                    </Grid>  \r\n                    <Grid item xs={10}\r\n                    >\r\n                      <TextField\r\n                          id=\"chatPostTextField\"\r\n                          label={'Post to: ' + JSON.stringify(self.getAdoptStatusByIndex(self.state.pageIndex).value[\"Facility ID\"])}\r\n                          multiline\r\n                          rowsMax=\"4\"\r\n                          value={this.state.postText}\r\n                          onChange={self.postOnChange}\r\n                          className={classes.textField}\r\n                          margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid> \r\n              </Grid>  \r\n              </div>\r\n              <div className='body'>\r\n              \r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                { self.state.chatterInfo\r\n                    ? <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\">\r\n                        <List className={classes.chatterList} >\r\n                          <li key={`section-${self.props.infoData[\"Facility ID\"]}`} >\r\n                              {JSON.stringify(self.props.infoData) != '{}' &&\r\n                                  <ul className={classes.ul}>\r\n                                      {self.state.chatterInfo.map((item, index) => {\r\n                                        \r\n                                        return(\r\n                                          <ListItem key={`item-${index}`}>\r\n                                            <Paper className={classes.paper} elevation={1}>\r\n                                              <Grid\r\n                                                container\r\n                                                spacing={16}\r\n                                                alignItems=\"center\"\r\n                                                direction=\"row\"\r\n                                              >\r\n                                                <Avatar src={item.actor.photo} className={classes.avatar} />\r\n                                                <ListItemText>\r\n                                                  <Link href={this.props.sandboxRoot+`${item.actor.id}`+\"/view\"} target=\"_blank\">\r\n                                                    {item.actor.displayName}\r\n                                                  </Link>\r\n                                                </ListItemText>\r\n                                              \r\n                                              </Grid>\r\n                                                  \r\n                                                    <p >\r\n                                                        {item.message.text}\r\n                                                  \r\n                                                  \r\n                                                    </p>\r\n                                              <Grid\r\n                                                container\r\n                                                spacing={16}\r\n                                                alignItems=\"center\"\r\n                                                direction=\"row\"\r\n                                                className={classes.commentGrid}\r\n                                              > \r\n                                                <Grid item xs={2}>\r\n                                                  <IconButton \r\n                                                    className={classes.button} \r\n                                                    onClick={() => self.addComment(item.message.id)}\r\n                                                  >  \r\n                                                    <AddComment color=\"primary\" />\r\n                                                  </IconButton>\r\n                                                </Grid>  \r\n                                                <Grid item xs={10}>\r\n                                                  <TextField\r\n                                                      id=\"standard-multiline-flexible\"\r\n                                                      label=\"Comment Text:\"\r\n                                                      multiline\r\n                                                      rowsMax=\"4\"\r\n                                                      \r\n                                                      value={this.state.commentValues[item.message.id]} \r\n                                                      name={this.state.commentValues[item.message.id]} \r\n                                                      onChange={this.commentOnChange.bind(this, item.message.id)}\r\n                                                      className={classes.textField}\r\n                                                      margin=\"normal\"\r\n                                                  />\r\n                                                </Grid>\r\n                                              </Grid>    \r\n                                                  {item.message.comments.page.items.length>0 &&\r\n                                                    <div>\r\n                                                      <ExpansionPanel>\r\n                                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                                          <Typography className={classes.heading}>Comments</Typography>\r\n                                                        </ExpansionPanelSummary>\r\n                                                        <ExpansionPanelDetails>\r\n                                                        <List className={classes.commentList} >\r\n                                                        <li key={`section-${self.props.infoData[\"Facility ID\"]}`} >\r\n                                                            {JSON.stringify(self.props.infoData) != '{}' &&\r\n                                                                // response.data[1].message.comments.page.items[0].user\r\n                                                                <ul className={classes.ul}>\r\n                                                                    {item.message.comments.page.items.map((item, index) => {\r\n                                                                      \r\n                                                                      return(\r\n                                                                        <ListItem key={`item-${index}`}>\r\n                                                                          <Paper className={classes.paper} elevation={1}>\r\n                                                                            <Grid\r\n                                                                              container\r\n                                                                              spacing={16}\r\n                                                                              alignItems=\"center\"\r\n                                                                              direction=\"row\"\r\n                                                                            >\r\n                                                                              <Avatar src={item.user.photo.smallPhotoUrl} className={classes.avatar} />\r\n                                                                              <ListItemText>\r\n                                                                                <Link href={\"https://carync--odin.lightning.force.com/lightning/r/User/\"+`${item.user.id}`+\"/view\"} target=\"_blank\">\r\n                                                                                  {item.user.displayName}\r\n                                                                                </Link>\r\n                                                                              </ListItemText>\r\n                                                                            </Grid>\r\n                                                                            <p >\r\n                                                                                {item.body.text}\r\n                                                                            </p>\r\n                                                                            </Paper>\r\n                                                                          </ListItem>)\r\n                                                                        })}\r\n                                                                    </ul>\r\n                                                                }\r\n                                                            </li>\r\n                                                          </List>\r\n                                                        </ExpansionPanelDetails>\r\n                                                      </ExpansionPanel>\r\n                                                      \r\n                                                      \r\n                                                    </div>\r\n                                                  }\r\n                                            </Paper>\r\n                                        </ListItem>)\r\n                                      })}\r\n                                  </ul>\r\n                              }\r\n                          </li>\r\n                        </List>\r\n                        \r\n                      </Grid>\r\n                    : null\r\n                }\r\n                \r\n              </Grid>\r\n              </div>    \r\n              </div>\r\n              </Fade>}      \r\n        </div>\r\n      </Fade>\r\n    )\r\n  }\r\n}\r\nInfoPanel.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(InfoPanel);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        margin: theme.spacing.unit,\r\n        pointerEvents: 'auto',\r\n    }\r\n});\r\n\r\nclass UserButton extends React.Component {\r\n    // componentDidUpdate = () => {\r\n    //     console.log('componentDidUpdate')\r\n    // }\r\n    // generate = (element)=> {\r\n    //     return [0, 1, 2, 3, 4, 5, 6].map(value =>\r\n    //         React.cloneElement(element, {\r\n    //         key: value,\r\n    //         }),\r\n    //     );\r\n    // }\r\n    onClick=()=>{\r\n        this.props.logUserOut()\r\n    }\r\n    render(props) {\r\n      const { classes } = this.props;\r\n      \r\n      return (\r\n        <div className={classes.parentDiv}>\r\n            \r\n        <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} onClick={this.onClick}>\r\n            <Add />\r\n        </Fab>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  UserButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };  \r\nexport default withStyles(styles)(UserButton)","import React, { Component } from 'react'\r\n//import { loadModules } from 'esri-loader'\r\nimport MapSearch from '../MapSearch/MapSearch'\r\nimport SidePanel from '../../organisms/SidePanel'\r\nimport InfoPanel from '../InfoPanel/InfoPanel'\r\nimport UserButton from '../UserButton/UserButton'\r\nimport './MapOverlayPanel.css'\r\nimport Grid from '@material-ui/core/Grid'\r\nclass MapOverlayPanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      hideSidePanel: true\r\n    }\r\n  } \r\n  setProjectCallback = (value) =>{\r\n    //this.setState({project:value})\r\n    this.props.projectCallback(value)\r\n  }\r\n  setPhaseCallback = (value) =>{\r\n    //this.setState({phase:value})\r\n    this.props.phaseCallback(value)\r\n  }\r\n  componentDidUpdate = () => {\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mapOverlayPanel\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n        >\r\n          <MapSearch \r\n            // selectParcelCallback={this.props.selectParcelCallback}\r\n            view={this.props.view} \r\n            resultPinDragable={true}\r\n          />\r\n          {/* <SidePanel ref=\"sidePanel\" \r\n            //hideSidePanel={false} \r\n            hideSidePanel={this.props.hideSidePanel} \r\n            addSelectedProperties = {this.props.addSelectedProperties}\r\n            deleteSelectedProperties = {this.props.deleteSelectedProperties}\r\n            projectCallback = {this.setProjectCallback}\r\n            phaseCallback = {this.setPhaseCallback}\r\n          /> */}\r\n          {/* <Chatter></Chatter> */}\r\n          {/* <UserButton \r\n            logUserOut={this.props.logUserOut}\r\n          /> */}\r\n          <InfoPanel\r\n            // infoData={this.props.infoData}\r\n            infoData={this.props.infoData}\r\n            adoptCallback={this.props.adoptCallback}\r\n            panelUse = {this.props.panelUse}\r\n            panelUseChangeCallback = {this.props.panelUseChangeCallback}\r\n            nodeAppRoot={this.props.nodeAppRoot}\r\n            sandboxRoot = {this.props.sandboxRoot}\r\n          ></InfoPanel>\r\n\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapOverlayPanel","import React from 'react'\nimport axios from 'axios'\nimport EsriLoaderReact from 'esri-loader-react'\nimport { loadModules } from 'esri-loader'\nimport MapOverlayPanel from '../../molecules/MapOverlayPanel/MapOverlayPanel'\nimport './ReactMap.css'\n\n//production\nconst layers = [\n  {\n    \"id\" : \"stormInlets\"\n    , \"label\" : \"Storm Inlets\"\n    , \"url\" : \"https://maps.townofcary.org/arcgis/rest/services/OneCary/StormwaterCollectionSystem/MapServer/\"\n    , \"serviceIndex\" : 2\n    , \"outFields\" : ['\"FACILITYID\"', '\"INLETTYPE\"','\"ACCESSDIAM\"','\"ADOPTED\"']\n    , \"fields\" : [\n        {\"name\":\"OBJECTID\", \"alias\":\"Object ID\", \"type\":\"oid\"},\n        {\"name\":\"FACILITYID\", \"alias\":\"Facility ID\", \"type\":\"string\"},\n        //{\"name\":\"INSTALLDATE\", \"alias\":\"Install Date\", \"type\":\"date\"}, \n        {\"name\":\"INLETTYPE\", \"alias\":\"Inlet Type\", \"type\":\"string\"},\n        {\"name\":\"ACCESSDIAM\", \"alias\":\"Access Diameter\", \"type\":\"double\"},\n        //{\"name\":\"ADOPTED\", \"alias\":\"Adopted\", \"type\":\"integer\"},\n        {\"name\":\"ADOPTED\", \"alias\":\"Adopted\", \"type\":\"string\"},\n        {\"name\":\"SFID\", \"alias\":\"Salesforce Id\", \"type\":\"string\"}\n    ]\n    , \"fieldAliases\" : [\"Facility ID\", \"Inlet Type\",\"Access Diameter\", \"Adopted\"]\n    , \"popupTemplate\" : null//{\n    //     \"title\": \"{title}\",\n    //     \"content\": [\n    //       {\n    //         \"type\": \"fields\",\n    //         \"fieldInfos\": [\n    //           {\n    //             \"fieldName\": \"objectId\",\n    //             \"label\": \"Object Id\",\n    //             \"visible\": true\n    //           },\n    //           {\n    //             \"fieldName\": \"title\",\n    //             \"label\": \"Title\",\n    //             \"visible\": true\n    //           },\n    //           {\n    //             \"fieldName\": \"type\",\n    //             \"label\": \"type\",\n    //             \"visible\": true\n    //           }\n    //         ]\n    //       }\n    //     ]\n    //   }\n    , \"definitionExpression\" : \"INLETTYPE='Pipe'\"\n    , \"minScale\" : 2257\n    , \"renderer\" : {\n        \"type\": \"simple\"  // autocasts as new SimpleRenderer()\n        , \"symbol\": {\n            \"type\": \"simple-marker\"  // autocasts as new SimpleMarkerSymbol()\n            , \"size\": 12\n            , \"color\": \"red\"\n            , \"outline\": {  // autocasts as new SimpleLineSymbol()\n                \"width\": 0.5\n                , \"color\": \"white\"\n          }\n        }\n      }\n      , \"classrenderer\" : {\n        \"type\": \"unique-value\"  // autocasts as new SimpleRenderer()\n        ,\"field\": \"test\"\n        , \"uniqueValueInfos\":[\n          {\n            \"value\":true\n            , \"symbol\":{\n                \"type\": \"simple-marker\"  // autocasts as new SimpleMarkerSymbol()\n                , \"size\": 12\n                , \"color\": \"red\"\n                , \"outline\": {  // autocasts as new SimpleLineSymbol()\n                    \"width\": 0.5\n                    , \"color\": \"white\"\n              }\n            }\n          }\n          , {\n            \"value\":true\n            , \"symbol\":{\n                \"type\": \"simple-marker\"  // autocasts as new SimpleMarkerSymbol()\n                , \"size\": 12\n                , \"color\": \"blue\"\n                , \"outline\": {  // autocasts as new SimpleLineSymbol()\n                    \"width\": 0.5\n                    , \"color\": \"white\"\n              }\n            }\n          }\n        ]\n      }\n  }\n]\n\nclass ReactMap extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      ctrlKey: false\n      , parametersLoaded : false\n      , mapView: null\n      , layers:[]\n      , layerViews:[]\n      , infoData: null\n      , panelUse: \"info\"\n    }\n    this.mapClick = this.mapClick.bind(this);\n    this.loadMap = this.loadMap.bind(this);\n  }\n  componentDidMount(){\n    // document.addEventListener('keydown', keyDown);\n    // document.addEventListener('keyup', keyUp);\n    // const self = this\n    // function keyDown(e) {\n    //   if (e.ctrlKey&&!self.state.ctrlKey){\n    //     self.setState({ctrlKey: true})\n    //   }\n    // }\n    // function keyUp(e) {\n    //   if (self.state.ctrlKey){self.setState({ctrlKey: false})}\n    // }\n  }\n  loadMap = ({loadedModules: [Map, MapView, GraphicsLayer, watchUtils], containerNode}) => {\n    const self = this;\n    const selectedParcelGL = new GraphicsLayer({\n      visible:true\n      , id: 'selectedParcelGL'\n    })\n    self.setState({selectedParcelGL:selectedParcelGL})\n\n    const map = new Map({basemap: 'satellite', id:\"daMap\"})\n    const mapView = new MapView({\n      container: containerNode\n      , center: [-78.78004, 35.78961]\n      , zoom: 18\n      , map: map\n    })\n\n    \n    mapView.when((function(mapView){\n        mapView.id = \"myMapView\"\n        self.setState({mapView:mapView})\n        mapView.on('click', self.mapClick)\n        mapView.popup.highlightEnabled = false;\n        mapView.popup.actions = {}\n        \n        self.addFeatureLayers(mapView, function(){\n          self.loadFeaturesByExtent(function(){\n            if(self.props.sessionParameters!=\"null\"){self.handleSessionParameters(self.props.sessionParameters)}\n          })\n          watchUtils.watch(mapView, \"extent\", self.debounce(function(){\n            self.loadFeaturesByExtent()\n          }, 150))\n            \n        })\n    }));  \n  }\n  debounce=(func, wait, immediate)=>{\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n  addFeatureLayers = (mapView, callback) =>{\n    const self = this\n    loadModules(['esri/layers/FeatureLayer'])\n    .then(([FeatureLayer]) => \n    {\n      layers.forEach(function(layer){\n        let fl = new FeatureLayer({\n          popupTemplate: layer.popupTemplate,\n          fields:layer.fields,\n          objectIdField:\"OBJECTID\",\n          id:layer.id,\n          geometryType: \"point\",\n          source:[],\n          popupEnabled:false\n        })\n        fl.when(function(featureLayer){\n          featureLayer.id = layer.id;\n          let layersConcat = self.state.layers.concat({'featureLayerId' : featureLayer.id, 'identifyable' : true})\n          self.setState({layers: layersConcat})\n        });\n        fl.minScale = layer.minScale;\n        const arcade = ` IIf($feature.ADOPTED==\"true\", true, false)`\n        const renderer = {\n          type: \"unique-value\", // autocasts as new UniqueValueRenderer()\n          valueExpression: arcade,\n          valueExpressionTitle: \"Adoption Status\",\n          uniqueValueInfos: [\n            {\n              value: true,\n              symbol: self.createMarkerSymbol(\"#00ff00\", 12),\n              label: \"adopted\"\n            }, \n            {\n              value: false,\n              symbol: self.createMarkerSymbol(\"#ff002e\", 12),\n              label: \"unadopted\"\n            }\n          ]\n        };\n        fl.renderer=renderer;\n        mapView.map.add(fl)\n        mapView.whenLayerView(fl).then(function(layerView) {\n          let layersConcat = self.state.layerViews.concat({'featureLayerId' : layer.id, 'layerView' : layerView})\n          self.setState({layerViews: layersConcat})\n        })  \n      })\n      callback()\n    })\n  }\n  createMarkerSymbol = (color, size) =>{\n\n    return {\"type\":\"simple-marker\",\"color\":color,\"angle\":0,\"xoffset\":0,\"yoffset\":0,\"size\":size,\"style\":\"circle\",\"outline\":{\"color\":[0,0,0,51],\"width\":0.5}}\n      \n  }\n  loadFeaturesByExtent = (callback = null) =>{\n    \n    const self = this\n      layers.forEach(function(layer){\n        let fl = self.state.mapView.map.findLayerById(layer.id)\n        const mapExtent = self.state.mapView.extent\n        const url = 'https://maps.townofcary.org/arcgis/rest/services/OneCary/StormwaterCollectionSystem/MapServer/2/query?where='+layer.definitionExpression+'&outFields=*&geometry='+JSON.stringify(mapExtent)+'&outSR=4326&geometryType=esriGeometryEnvelope&spatialRel=esriSpatialRelIntersects&outFields=&f=pjson'\n        axios.get(url)\n        .then(function (response) {\n          //    console.log('response: '+ JSON.stringify(response.data.features))\n          let facIds = []\n          let features = JSON.parse(JSON.stringify(response.data.features))\n          features.forEach(function(feature){\n            //console.log(JSON.stringify(feature.attributes))\n            facIds.push(feature.attributes.FACILITYID)\n            feature.geometry.type = \"point\"\n          })\n          let addFacIds = facIds.slice()\n          let deleteFacIds = facIds.slice()\n          //*****TODO link to map from asset open map with url parameter*/\n          const qObject = {\n            \"where\" : \"FACILITYID IN ('\" +addFacIds.join(\"','\")+\"')\",\n            \"returnGeometry\" : false,\n            \"outFields\" : [ \"FACILITYID\" ],\n          }\n          self.queryFeatureLayer(fl, qObject).then(existingFacIds => {\n            existingFacIds.forEach(function(exFacId){\n              if(facIds.indexOf(exFacId.attributes.FACILITYID)>-1){\n                addFacIds.splice(addFacIds.indexOf(exFacId.attributes.FACILITYID),1)\n              }              \n            })\n            if (addFacIds.length>0){\n              axios({\n                method: 'post'\n                , url: self.props.nodeAppRoot+\"getassets/\"\n                , data: {\n                  \"assetids\":addFacIds\n                }\n              })\n              .then(function(response){\n          //      console.log(JSON.stringify(response.data))\n                const sfRecords = JSON.parse(JSON.stringify(response.data))\n                let combinedDataset = []\n                features.forEach(function(feature){\n                  feature.attributes.ADOPTED = \"false\";\n                  for(var sfri = 0; sfri<sfRecords.length; sfri++){\n                    const record = sfRecords[sfri]\n                    if(feature.attributes.FACILITYID===record.SerialNumber){\n                      feature.attributes.ADOPTED = record.Adopted__c == true?\"true\":\"false\"\n                      //feature.attributes.ADOPTED = record.Adopted__c\n                      console.log('record.Id: ' + record.Id)\n                      feature.attributes.SFID = record.Id\n                      combinedDataset.push(feature)\n                      break\n                    }  \n                  }\n\n                  \n                  })\n                fl.applyEdits({addFeatures:combinedDataset}).then(function(){\n                  //*****TODO add counter here for multiple featureLayers */\n                  \n                  fl.queryFeatures().then(function(results){\n                    const qObject = {\n                      \"where\" : \"NOT FACILITYID IN ('\" +deleteFacIds.join(\"','\")+\"')\",\n                      \"returnGeometry\" : true,\n                      \"outFields\" : [ \"*\" ],\n                    }\n                    self.queryFeatureLayer(fl, qObject).then(removeFacIds => {\n                      let remove = []\n                      removeFacIds.forEach(function(feature){\n                        feature.geometry.type = \"point\"\n                        remove.push(feature)\n                      })\n                      if(remove.length>0){\n                        fl.applyEdits({deleteFeatures:remove}).then(function(){\n                          fl.queryFeatureCount().then(function(numFeatures){\n                          });\n                        })\n                        .catch(function (error) {\n                          console.log('error: ' + error);\n                        });\n                      }\n                      \n                      callback?callback():console.log('noCallback')\n                    })\n                    //console.log(JSON.stringify(results.features));  // prints the array of features to the console\n                  });\n                })\n              })  \n            }\n          })\n        })\n        .catch(function (error) {\n          console.log('error: ' + error);\n        });\n      })\n  }\n  handleSessionParameters = (seschParams) => {\n    const params = JSON.parse(seschParams)\n    const self = this\n    \n    if (params.type===\"query\"){\n      let fl = self.state.mapView.map.findLayerById(params.layerId)\n      const qObject = {\n        \"where\" : params.where,\n        \"returnGeometry\" : true,\n        \"outFields\" : [ \"*\" ],\n      }\n      self.queryFeatureLayer(fl, qObject).then(results => {\n        let info = {}\n        results.forEach(function(fSetFeature){\n          const feature = JSON.parse(JSON.stringify(fSetFeature))\n          info[feature.attributes.OBJECTID+\"_\"+params.layerId] = {}\n          \n          let layerConfig = self.getLayerConfig(params.layerId) \n          layerConfig.fields.forEach(function(field){\n            if(field.name!='OBJECTID'){\n              if(field.name==='ADOPTED'){\n                info[feature.attributes.OBJECTID+\"_\"+params.layerId][field.alias] = feature.attributes[field.name]===\"true\"?true:false   \n              }\n              else{\n                info[feature.attributes.OBJECTID+\"_\"+params.layerId][field.alias] = feature.attributes[field.name]\n              }\n            }\n          })\n        })\n        let graphic = results[0]\n        var markerSymbol = {\n          type: \"simple-marker\", // autocasts as new SimpleMarkerSymbol()\n          color: [226, 119, 40, 0],\n          size: 15,\n          style:\"square\",\n          outline: {\n            // autocasts as new SimpleLineSymbol()\n            color: [0, 255, 255],\n            width: 2\n          }\n        };\n        graphic.symbol = markerSymbol\n        self.state.mapView.goTo(graphic.geometry,{animate:true, duration:1000})\n        self.updateFeatureSelectionGraphic(graphic)\n        self.setState({infoData:info})\n      })\n      .catch(function (error) {\n        console.log('error: ' + error);\n      });\n    }\n  }\n  queryFeatureLayer = (featureLayer, queryObject) => {\n    const self = this\n    return loadModules(['esri/tasks/support/Query'])\n    .then(([Query]) => \n    {\n      const query = new Query(queryObject)\n      return featureLayer.queryFeatures(query).then(function(results){\n        return results.features;\n      })\n      .catch(err => {\n        // handle any errors\n        console.error(\"queryFeatureLayers: \" + err);\n      });\n    })\n  }\n  mapClick = (e) => {\n      this.panelUseChange(\"info\")\n      this.spatiallyQueryLayers(e.mapPoint)\n  }\n  spatiallyQueryLayers = (mapPoint) => {\n    const self = this\n    loadModules(['esri/tasks/QueryTask','esri/tasks/support/Query'])\n    .then(([QueryTask,Query]) => \n    {\n      const stateLayers = self.state.layers\n      //may want to restructure the config into services and indexes rather than indiviual layers. \n      //in this manner we could loop over the services and \n      stateLayers.forEach(function(layer){\n        if (layer.identifyable){\n          const featureLayerId = layer.featureLayerId\n          const mv = self.state.mapView\n          const map = mv.map\n          let fl = map.findLayerById(featureLayerId)\n          var query = fl.createQuery();\n          query.geometry = mapPoint;  // the point location of the pointer\n          //!!!!!TODO: may want to make the distance some multiplier based on the % progressoin of zoom level scales. \n          query.distance = 10\n          query.unit = \"feet\"\n          query.spatialRelationship = \"intersects\";  // this is the default\n          //query.returnGeometry = false;\n          query.outFields = [ \"OBJECTID\",\"FACILITYID\",\"INLETTYPE\",\"ACCESSDIAM\",\"ADOPTED\", \"SFID\" ];\n          var markerSymbol = {\n            type: \"simple-marker\", // autocasts as new SimpleMarkerSymbol()\n            color: [226, 119, 40, 0],\n            size: 15,\n            style:\"square\",\n            outline: {\n              // autocasts as new SimpleLineSymbol()\n              color: [0, 255, 255],\n              width: 2\n            }\n          };\n          const layerView = self.getLayerViewByLayerId(layer.featureLayerId)\n          let info = {}\n          layerView.queryFeatures(query)\n            .then(function(featureSet){\n              if (featureSet.hasOwnProperty(\"features\")){\n                if(featureSet.features.length >0){\n                  featureSet.features.forEach(function(fSetFeature){\n                    const feature = JSON.parse(JSON.stringify(fSetFeature))\n                    info[feature.attributes.OBJECTID+\"_\"+featureLayerId] = {}\n                    \n                    let layerConfig = self.getLayerConfig(featureLayerId) \n                    layerConfig.fields.forEach(function(field){\n                      if(field.name!='OBJECTID'){\n                        if(field.name==='ADOPTED'){\n                          info[feature.attributes.OBJECTID+\"_\"+featureLayerId][field.alias] = feature.attributes[field.name]===\"true\"?true:false   \n                        }\n                        else{\n                          info[feature.attributes.OBJECTID+\"_\"+featureLayerId][field.alias] = feature.attributes[field.name]\n                        }\n                      }\n                    })\n                  })\n                  let graphic = featureSet.features[0]\n                  graphic.symbol = markerSymbol\n                  self.updateFeatureSelectionGraphic(graphic)\n                  self.setState({infoData:info})\n                }\n                else{\n                  self.setState({infoData: null})\n                  self.state.mapView.graphics.removeAll()\n                }  \n              }\n            })\n            .catch(err => {\n              // handle any errors\n              console.error(err);\n            });\n        }  \n      })\n    })\n    .catch(err => {\n      // handle any errors\n      console.error(err);\n    });  \n  }\n  updateFeatureSelectionGraphic=(feature)=>{\n    //console.log(\"feature: \" + JSON.stringify(feature))\n    this.state.mapView.graphics.removeAll()\n    this.state.mapView.graphics.add(feature)\n  }\n  getLayerViewByLayerId = (layerId) => {\n    const self = this\n    const layerViews = this.state.layerViews\n    let layerView = null\n    for(let i = 0; i < layerViews.length; i++){\n      //'featureLayerId' : layer.id, 'layerView' : layerView\n      if(layerViews[i].featureLayerId == layerId){\n        layerView = layerViews[i].layerView\n        break\n      }\n    }\n    return layerView    \n  }\n \n  getLayerConfig = (featureLayerId) => {\n    let layerConfig\n    for(var i=0; i < layers.length; i++){\n      const layer = layers[i]\n      if(layer.id === featureLayerId){\n        layerConfig = layer\n        break\n      }\n    }\n    return layerConfig\n  }\n  getFacilityIds = (results) => {\n    let ids = []\n    JSON.parse(JSON.stringify(results)).forEach(function(result){\n     ids.push(result.attributes[\"Facility ID\"])\n    })\n    return ids\n  }\n\n\n  deleteObjectKeys = (object,keys) => {\n    keys.forEach(function(key){\n      delete object[key]\n    })\n    return\n  }\n  adoptCallback = (record) => {\n    const self = this\n    loadModules(['esri/tasks/QueryTask','esri/tasks/support/Query'])\n    .then(([QueryTask,Query]) => \n    {\n      const mv = self.state.mapView\n      const map = mv.map\n      const key = record[Object.keys(record)[0]]\n      const featureLayerId = key.split(\"_\")[1]\n      const facilityId = record.value[\"Facility ID\"]\n      let fl = map.findLayerById(featureLayerId)\n      var query = fl.createQuery();\n      query.where = \"FACILITYID = '\"+facilityId+\"'\"\n      //!!!!!TODO: may want to make the distance some multiplier based on the % progressoin of zoom level scales. \n      query.returnGeometry = false;\n      query.outFields = [ \"OBJECTID\",\"FACILITYID\",\"INLETTYPE\",\"ACCESSDIAM\",\"ADOPTED\", \"SFID\" ];\n      const layerView = self.getLayerViewByLayerId(featureLayerId)\n      //let info = {}\n      layerView.queryFeatures(query)\n      .then(function(featureSet){\n        let feature = JSON.parse(JSON.stringify(featureSet.features[0]))\n        feature.attributes.ADOPTED = record.value.Adopted==true?\"true\":\"false\"\n        fl.applyEdits({updateFeatures:[feature]})\n        .then(function(editResult) {\n          fl.queryFeatures().then(function(results){\n          })\n        }) \n      })\n      .catch(err => {\n        // handle any errors\n        console.error(err);\n      });\n    })\n  }\n  panelUseChange = (useState) => {\n    this.setState({panelUse:useState})\n  }\n  render() {\n    const options = {\n      url: 'https://js.arcgis.com/4.10/'\n    };\n    return (\n      <div className=\"ReactMap\">\n        <EsriLoaderReact \n          options={options}\n          modulesToLoad={['esri/Map', 'esri/views/MapView', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils']}    \n          onReady={this.loadMap}\n        />\n        <MapOverlayPanel \n          adoptCallback = {this.adoptCallback}\n          infoData = {this.state.infoData}\n          panelUse = {this.state.panelUse}\n          panelUseChangeCallback = {this.panelUseChange}\n          nodeAppRoot={this.props.nodeAppRoot}\n          sandboxRoot = {this.props.sandboxRoot}\n        />\n        \n      </div>\n    );\n  }\n}\n\nexport default ReactMap;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport config from './config'\nimport ReactMap from './components/organisms/ReactMap'\n\nconst nodeAppRoot = 'https://woesoflightning.com/esri_salesforce_api/'\n//const nodeAppRoot = 'http://localhost:4001/'\nconst sandboxRoot = 'https://carync--zeus.lightning.force.com/'\n//const sandboxRoot = 'https://carync--odin.cs91.my.salesforce.com/'\n//const callbackRoot = \"https://carync--zeus.cs91.my.salesforce.com\"\n//const callbackRoot = \"https://localhost:8080\"\nconst callbackRoot = \"https://woesoflightning.com\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      sessionTokenObj: null,\n      sessionParameters: null,\n    }\n  }\n  componentWillMount(){\n    const self = this\n    const port = '8080'\n    var urlParams = new URLSearchParams(window.location.search);\n    console.log(\"urlParams: \" + urlParams);\n    var code = urlParams.get('code');\n    console.log(\"code: \" + code);\n    if(code === null){\n      const url = nodeAppRoot+\"getclientid/\"\n      axios({\n        method: 'post'\n        , url:  url\n      })\n      .then(function (response) {\n        window.location = sandboxRoot + \"services/oauth2/authorize?response_type=code&client_id=\"+response.data+\"&redirect_uri=\"+callbackRoot+\"&state=\"+urlParams.get('state');  \n      })\n    }  \n    else{\n      var reqBody = 'code='+code;\n      self.setState({sessionParameters:urlParams.get('state')})\n      axios({\n        method: 'post'\n        , url:  nodeAppRoot+\"settoken/\"\n        , data: {\n          code:code\n        }\n      })\n      .then(function(response){\n        self.setState({sessionTokenObj:response.data.data})\n      })\n      .catch(function (error) {\n      });\n    }  \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactMap \n          nodeAppRoot={nodeAppRoot}\n          sessionParameters={this.state.sessionParameters}\n          sandboxRoot = {sandboxRoot}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}